{"ast":null,"code":"var _jsxFileName = \"/Users/jocelynxu/Desktop/vaxalert/frontend/src/components/SMSForm.js\";\nimport React, { Component } from 'react';\nimport './SMSForm.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SMSForm extends Component {\n  // constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: {\n        to: '',\n        body: ''\n      },\n      submitting: false,\n      error: false\n    }; // binding both method to the SMS forms object\n\n    this.onHandleChange = this.onHandleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  } // gets information from the text area\n\n\n  onHandleChange(event) {\n    const name = event.target.getAttribute('name');\n    this.setState({\n      message: { ...this.state.message,\n        [name]: event.target.value\n      }\n    });\n  } // when submit is clicked, use API\n  // automatically PREVENT default\n\n\n  onSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      submitting: true\n    });\n    fetch('/api/messages', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state.message)\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        this.setState({\n          error: false,\n          submitting: false,\n          message: {\n            to: '',\n            body: ''\n          }\n        });\n      } else {\n        this.setState({\n          error: true,\n          submitting: false\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmit,\n      className: this.state.error ? 'error sms-form' : 'sms-form',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"to\",\n          children: \"To:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"to\",\n          id: \"to\" // set form field values using onHandleChange\n          ,\n          value: this.state.message.to,\n          onChange: this.onHandleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"body\",\n          children: \"Body:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"body\",\n          id: \"body\",\n          value: this.state.message.body,\n          onChange: this.onHandleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"custom-btn\",\n        disabled: this.state.submitting,\n        children: \"Send message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SMSForm;","map":{"version":3,"sources":["/Users/jocelynxu/Desktop/vaxalert/frontend/src/components/SMSForm.js"],"names":["React","Component","Button","SMSForm","constructor","props","state","message","to","body","submitting","error","onHandleChange","bind","onSubmit","event","name","target","getAttribute","setState","value","preventDefault","fetch","method","headers","JSON","stringify","then","res","json","data","success","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './SMSForm.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\n\nclass SMSForm extends Component {\n    // constructor\n    constructor(props){\n        super(props);\n        this.state = {\n            message: {\n                to: '',\n                body: ''\n            },\n            submitting: false,\n            error: false\n        };\n        // binding both method to the SMS forms object\n        this.onHandleChange = this.onHandleChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    // gets information from the text area\n    onHandleChange(event) {\n        const name = event.target.getAttribute('name');\n        this.setState({\n            message: {...this.state.message, [name]: event.target.value}\n        });\n    }\n\n    // when submit is clicked, use API\n    // automatically PREVENT default\n    onSubmit(event) {\n        event.preventDefault();\n        this.setState({submitting: true});\n        fetch('/api/messages', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.message)\n        })\n            .then(res => res.json())\n            .then(data => {\n                if(data.success) {\n                    this.setState({\n                        error: false,\n                        submitting: false,\n                        message: {\n                            to: '',\n                            body: ''\n                        }\n                    });\n                }\n                else {\n                    this.setState({\n                        error:true,\n                        submitting: false\n                    });\n                }\n            });\n    }\n    \n    render() {\n        return (\n            <form\n                onSubmit = {this.onSubmit}\n                className = {this.state.error ? 'error sms-form' : 'sms-form'}\n            >\n                <div>\n                    <label htmlFor=\"to\">To:</label>\n                    <input\n                        type=\"tel\"\n                        name=\"to\"\n                        id=\"to\"\n                        // set form field values using onHandleChange\n                        value={this.state.message.to}\n                        onChange={this.onHandleChange}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"body\">Body:</label>\n                    <textarea \n                        name=\"body\" \n                        id=\"body\"\n                        value={this.state.message.body}\n                        onChange={this.onHandleChange}\n                    />\n                </div>\n                <Button type=\"submit\" className=\"custom-btn\" disabled={this.state.submitting}>\n                    Send message\n                </Button>{' '}\n            </form>\n        );\n    }\n    \n}\n\nexport default SMSForm;\n"]},"metadata":{},"sourceType":"module"}